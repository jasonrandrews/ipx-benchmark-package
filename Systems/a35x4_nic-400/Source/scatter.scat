;*********************************************************************
;         Copyright (c) 2020 Arm Limited. All rights reserved.          
;                                                                    
;                          IP Selection Sandbox                       
;*********************************************************************
;  Linker file for Cortex-A35 with Arm Compiler 6

LOAD 0x00000000
{
    EXEC +0
    {
        startup_Av8.o (StartUp, +FIRST)
        * (+RO, +RW, +ZI)
    }

    ;
    ; Separate heap - import symbol __use_two_region_memory
    ; in source code for this to work correctly
    ;
    ARM_LIB_HEAP     +0 ALIGN 64 EMPTY 0x4000 {}

    ;
    ; App stacks for all CPUs
    ; All stacks and heap are aligned to a cache-line boundary
    ;
    ARM_LIB_STACK    +0 ALIGN 64 EMPTY 4 * 0x80000 {}

    ;
    ; Stacks for EL3
    ;
    EL3_STACKS       +0 ALIGN 64 EMPTY 4 * 0x1000 {}
    ;
    ; Strictly speaking, the L1 tables don't need to
    ; be so strongly aligned, but no matter
    ;
    TTB0_L1          +0 ALIGN 4096 EMPTY 0x1000 {}

    ;
    ; Various sets of L2 tables
    ;
    ; Alignment is 4KB, since the code uses a 4K page
    ; granularity - larger granularities would require
    ; correspondingly stricter alignment
    ;
    TTB0_L2_RAM      +0 ALIGN 4096 EMPTY 0x1000 {}

    TTB0_L2_PRIVATE  +0 ALIGN 4096 EMPTY 0x1000 {}

    ;
    ; The startup code uses the end of this region to calculate
    ; the top of memory - don't place any RAM regions after it
    ;
    TOP_OF_RAM  +0 EMPTY 4 {}

    ;
    ;
    CS3_PERIPHERALS  0x13080000 EMPTY 0x10000 {}

}
