#
# Makefile.common - Common Makefile rules included in examples Makefiles.
#
# Copyright 2012-2021 ARM Limited.
# All rights reserved.
#

# Environment checks
ifeq ($(MAXCORE_HOME),)
    $(error MAXCORE_HOME: undefined variable)
endif
ifeq ($(PVLIB_HOME),)
    $(error PVLIB_HOME: undefined variable)
endif
ifeq ($(SYSTEMC_HOME),)
    $(error SYSTEMC_HOME: undefined variable)
endif

# Globals
OS = $(shell uname)
ifneq ($(OS),Linux)
    $(error $OS: unknown operating system)
endif

HOST_ARCH = $(shell uname -m)
ifeq ($(HOST_ARCH),x86_64)
    PLATFORM = Linux64
    CXXFLAGS += -march=core2
    # TODO replace BITNESS_IN_NAME with PLATFORM in Makefiles and remove from here
    BITNESS_IN_NAME = 64
else ifeq ($(HOST_ARCH),aarch64)
    PLATFORM = Linux64_armv8l
    CXXFLAGS += -march=armv8-a
    # TODO replace BITNESS_IN_NAME with PLATFORM in Makefiles and remove from here
    BITNESS_IN_NAME = 64_armv8l
else
    $(error $(HOST_ARCH): unknown host architecture)
endif

# number of cpus to build
J = $(shell grep -c processor /proc/cpuinfo)

# Determine regime from target's prefix
REGIME_dbg = Debug
REGIME_rel = Release
REGIME = $(REGIME_$(word 1, $(subst _, ,$@)))

# Determine compiler flags from target's prefix
CXXFLAGS_dbg = -ggdb3 -DSIMGEN_DEBUG
CXXFLAGS_rel = -O3 -DNDEBUG
CXXFLAGS += $(CXXFLAGS_$(word 1, $(subst _, ,$@)))

# Determine C++11 support from target's prefix
CXXFLAGS_gcc63 = -std=c++11
CXXFLAGS_gcc64 = -std=c++11
CXXFLAGS_gcc73 = -std=c++11
CXXFLAGS_gcc93 = -std=c++11
CXXFLAGS += $(CXXFLAGS_$(word 2, $(subst _, ,$@)))

# Determine binares and config to use from make target
GCC_VER_gcc64       = 6.4
CONFIG_VER_gcc64    = 6.4
GCC_VER_gcc63       = 6.3
CONFIG_VER_gcc63    = 6.3
GCC_VER_gcc73       = 7.3
CONFIG_VER_gcc73    = 7.3
GCC_VER_gcc93       = 9.3
CONFIG_VER_gcc93    = 9.3


GCC_VER = $(GCC_VER_$(word 2, $(subst _, ,$@)))
CONFIG_VER = $(CONFIG_VER_$(word 2, $(subst _, ,$@)))

# Determine actual compiler in use from compiler binary
CXX_VER := $(shell $(CXX) -dumpversion 2> /dev/null | \
                   sed -e "s/\([0-9]*\.[0-9]*\)\.[0-9]*/\1/")
CXX_VER_MAJOR := $(word 1, $(subst ., ,$(CXX_VER)))

# Determine configuration
CONFIG=$(PLATFORM)-$(REGIME)-GCC-$(CONFIG_VER)

# Determine compiler flags
CXXFLAGS += -pthread -DSC_INCLUDE_DYNAMIC_PROCESSES -Wall \
			-I$(PVLIB_HOME)/include/fmruntime \
            -I$(PVLIB_HOME)/include/fmruntime/eslapi \
			-I$(PVLIB_HOME)/Iris/include \
            -I$(SYSTEMC_HOME)/include \
			-I$(MAXCORE_HOME)/AMBA-PV/include \
			-I$(PVLIB_HOME)/examples/SystemCExport/Common
# Determine linker flags
LDFLAGS += -L$(PVLIB_HOME)/lib/$(PLATFORM)_GCC-$(GCC_VER) \
           -L$(PVLIB_HOME)/Iris/$(PLATFORM)_GCC-$(GCC_VER) \
           -L$(SYSTEMC_HOME)/lib/$(PLATFORM)_GCC-$(GCC_VER)

SYSTEMLIBS += -latomic

# Determine additional simgen flags
ifneq ($(origin CXX),default)
    override SIMGENFLAGS += --gcc-path $(CXX)
endif

# Default targets done on the real compiler not the version extracted from the
# target.

ifeq ($(CXX_VER),6.3)
DBG = dbg_gcc63_64
REL = rel_gcc63_64
endif


ifeq ($(CXX_VER),6.4)
DBG = dbg_gcc64_64
REL = rel_gcc64_64
endif


ifeq ($(CXX_VER),7.3)
DBG = dbg_gcc73_64
REL = rel_gcc73_64
endif


ifeq ($(CXX_VER),9.3)
DBG = dbg_gcc93_64
REL = rel_gcc93_64
endif

# Default rules

.PHONY: all dbg rel clean

all: rel

dbg:
	$(MAKE) $(MAKEFLAGS) $(DBG)

rel:
	$(MAKE) $(MAKEFLAGS) $(REL)

clean:
	$(MAKE) $(MAKEFLAGS) $(DBG)_clean
	$(MAKE) $(MAKEFLAGS) $(REL)_clean

